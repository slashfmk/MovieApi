// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.Application.Database;

#nullable disable

namespace Movies.Application.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20250103003644_GenreSeed2")]
    partial class GenreSeed2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movies.Application.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e910a588-612c-42fd-ae0c-555f672eb3bf"),
                            Description = "Action",
                            Title = "Action"
                        },
                        new
                        {
                            Id = new Guid("a1b852e7-5a34-43eb-980f-0875fb1d58e9"),
                            Description = "Adventure",
                            Title = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("72b914ea-a9d7-43c6-8a20-7c12dd6658f2"),
                            Description = "Drama",
                            Title = "Drama"
                        },
                        new
                        {
                            Id = new Guid("633aba6f-d3c0-46ad-aa26-4a753747eb9f"),
                            Description = "Fantasy",
                            Title = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("03d560f4-ba2f-490a-8084-adaaa031246a"),
                            Description = "Horror",
                            Title = "Horror"
                        },
                        new
                        {
                            Id = new Guid("d8e034a2-f63e-4b9a-98b4-9cbd7ded53f8"),
                            Description = "Romance",
                            Title = "Romance"
                        },
                        new
                        {
                            Id = new Guid("22f205fa-b4b0-47d5-9387-b9c9a158eb67"),
                            Description = "Science Fiction",
                            Title = "Science Fiction"
                        },
                        new
                        {
                            Id = new Guid("5ea82b38-4cc7-4ae1-a4eb-9a85f23ea033"),
                            Description = "Thriller",
                            Title = "Thriller"
                        });
                });

            modelBuilder.Entity("Movies.Application.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("YearOfRelease")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Movies.Application.Models.MovieGenre", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MoviesGenres");
                });

            modelBuilder.Entity("Movies.Application.Models.MovieGenre", b =>
                {
                    b.HasOne("Movies.Application.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies.Application.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movies.Application.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("Movies.Application.Models.Movie", b =>
                {
                    b.Navigation("MovieGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
