// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.Application.Database;

#nullable disable

namespace Movies.Application.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20241226072340_GenreSeed")]
    partial class GenreSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movies.Application.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97bc81e1-bec7-4ba1-9e8e-53f2cc41d356"),
                            Description = "Action",
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("79fb5cb4-279c-49ea-b5fd-a6497b5b5733"),
                            Description = "Adventure",
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("05c69db2-4825-4591-8478-feba4d850d87"),
                            Description = "Drama",
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("c7e1e772-817a-4063-817a-9b93047fdfcc"),
                            Description = "Fantasy",
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("27128d98-fdff-4790-9d2a-4b73f6cde732"),
                            Description = "Horror",
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("472f8a03-ad48-467b-9051-fad5c8bcbf96"),
                            Description = "Romance",
                            Name = "Romance"
                        },
                        new
                        {
                            Id = new Guid("9c5e6724-a6c2-41cb-acd5-52cdb5cd125e"),
                            Description = "Science Fiction",
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = new Guid("6140768d-83c2-46c1-bc5c-8e6b4559d14b"),
                            Description = "Thriller",
                            Name = "Thriller"
                        });
                });

            modelBuilder.Entity("Movies.Application.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("YearOfRelease")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Movies.Application.Models.MovieGenre", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MoviesGenres");
                });

            modelBuilder.Entity("Movies.Application.Models.MovieGenre", b =>
                {
                    b.HasOne("Movies.Application.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies.Application.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movies.Application.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("Movies.Application.Models.Movie", b =>
                {
                    b.Navigation("MovieGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
